<?php

namespace ContainerHOf4bZ6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUx_Autocomplete_EntityAutocompleteControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'ux.autocomplete.entity_autocomplete_controller' shared service.
     *
     * @return \Symfony\UX\Autocomplete\Controller\EntityAutocompleteController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-autocomplete/src/Controller/EntityAutocompleteController.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-autocomplete/src/AutocompleterRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-autocomplete/src/AutocompleteResultsExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/ux-autocomplete/src/Checksum/ChecksumCalculator.php';

        return $container->services['ux.autocomplete.entity_autocomplete_controller'] = new \Symfony\UX\Autocomplete\Controller\EntityAutocompleteController(new \Symfony\UX\Autocomplete\AutocompleterRegistry(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'album_autocomplete_field' => ['privates', 'ux.autocomplete.wrapped_entity_type_autocompleter.album_autocomplete_field', 'getUx_Autocomplete_WrappedEntityTypeAutocompleter_AlbumAutocompleteFieldService', true],
            'artist_autocomplete_field' => ['privates', 'ux.autocomplete.wrapped_entity_type_autocompleter.artist_autocomplete_field', 'getUx_Autocomplete_WrappedEntityTypeAutocompleter_ArtistAutocompleteFieldService', true],
            'genre_autocomplete_field' => ['privates', 'ux.autocomplete.wrapped_entity_type_autocompleter.genre_autocomplete_field', 'getUx_Autocomplete_WrappedEntityTypeAutocompleter_GenreAutocompleteFieldService', true],
            'playlist_autocomplete_field' => ['privates', 'ux.autocomplete.wrapped_entity_type_autocompleter.playlist_autocomplete_field', 'getUx_Autocomplete_WrappedEntityTypeAutocompleter_PlaylistAutocompleteFieldService', true],
            'track_autocomplete_field' => ['privates', 'ux.autocomplete.wrapped_entity_type_autocompleter.track_autocomplete_field', 'getUx_Autocomplete_WrappedEntityTypeAutocompleter_TrackAutocompleteFieldService', true],
        ], [
            'album_autocomplete_field' => '?',
            'artist_autocomplete_field' => '?',
            'genre_autocomplete_field' => '?',
            'playlist_autocomplete_field' => '?',
            'track_autocomplete_field' => '?',
        ])), new \Symfony\UX\Autocomplete\AutocompleteResultsExecutor(($container->privates['ux.autocomplete.doctrine_registry_wrapper'] ?? $container->load('getUx_Autocomplete_DoctrineRegistryWrapperService')), ($container->privates['property_accessor'] ?? self::getPropertyAccessorService($container)), new \Symfony\Bundle\SecurityBundle\Security(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'security.authenticator.managers_locator' => ['privates', 'security.authenticator.managers_locator', 'getSecurity_Authenticator_ManagersLocatorService', true],
            'security.authorization_checker' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['privates', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', true],
            'security.firewall.event_dispatcher_locator' => ['privates', 'security.firewall.event_dispatcher_locator', 'getSecurity_Firewall_EventDispatcherLocatorService', true],
            'security.firewall.map' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
            'security.token_storage' => ['privates', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'security.user_checker' => ['privates', 'security.user_checker', 'getSecurity_UserCheckerService', true],
        ], [
            'request_stack' => '?',
            'security.authenticator.managers_locator' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.firewall.event_dispatcher_locator' => '?',
            'security.firewall.map' => '?',
            'security.token_storage' => '?',
            'security.user_checker' => '?',
        ]), ['dev' => NULL, 'main' => new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Security\\AppAuthenticator' => ['privates', 'App\\Security\\AppAuthenticator', 'getAppAuthenticatorService', true],
            'security.authenticator.remember_me.main' => ['privates', 'security.authenticator.remember_me.main', 'getSecurity_Authenticator_RememberMe_MainService', true],
        ], [
            'App\\Security\\AppAuthenticator' => '?',
            'security.authenticator.remember_me.main' => '?',
        ])])), ($container->services['router'] ?? self::getRouterService($container)), ($container->privates['ux.autocomplete.checksum_calculator'] ??= new \Symfony\UX\Autocomplete\Checksum\ChecksumCalculator($container->getEnv('APP_SECRET'))));
    }
}
